2017-10-31 16:22:11,884 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915: startup date [Tue Oct 31 16:22:11 CST 2017]; root of context hierarchy
2017-10-31 16:22:12,048 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 16:22:12,101 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 16:22:12,128 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5cec9d8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 16:22:12,494 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 16:22:12,506 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 16:22:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
2017-10-31 16:22:13,440 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=6b1fc7de-7d0a-3e63-a13a-3568a639d5a6
2017-10-31 16:22:13,460 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 16:22:13,502 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$73e58c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 16:22:13,569 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$7e143855] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 16:22:13,622 WARN  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][refresh] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
2017-10-31 16:22:13,622 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 16:22:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 16:22:13,625 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 16:22:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 16:22:13,626 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 16:22:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 16:22:13,637 INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer][logAutoConfigurationReport] 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017-10-31 16:22:13,642 ERROR [org.springframework.boot.SpringApplication][reportFailure] Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:235)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getPointcut(ReflectiveAspectJAdvisorFactory.java:220)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisor(ReflectiveAspectJAdvisorFactory.java:203)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:136)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:90)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 45 more
2017-10-31 18:17:33,708 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915: startup date [Tue Oct 31 18:17:33 CST 2017]; root of context hierarchy
2017-10-31 18:17:33,872 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 18:17:33,959 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 18:17:33,992 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$70b8a90e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 18:17:34,356 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 18:17:34,368 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72c28d64: startup date [Tue Oct 31 18:17:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
2017-10-31 18:17:35,334 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=6b1fc7de-7d0a-3e63-a13a-3568a639d5a6
2017-10-31 18:17:35,354 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 18:17:35,392 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$1b0a643f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 18:17:35,450 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$91e043d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 18:17:35,524 WARN  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][refresh] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
2017-10-31 18:17:35,525 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72c28d64: startup date [Tue Oct 31 18:17:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 18:17:35,527 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72c28d64: startup date [Tue Oct 31 18:17:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 18:17:35,528 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72c28d64: startup date [Tue Oct 31 18:17:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 18:17:35,540 INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer][logAutoConfigurationReport] 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017-10-31 18:17:35,544 ERROR [org.springframework.boot.SpringApplication][reportFailure] Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:235)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getPointcut(ReflectiveAspectJAdvisorFactory.java:220)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisor(ReflectiveAspectJAdvisorFactory.java:203)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:136)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:90)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 45 more
2017-10-31 20:22:03,626 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915: startup date [Tue Oct 31 20:22:03 CST 2017]; root of context hierarchy
2017-10-31 20:22:03,789 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:22:03,885 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:22:03,914 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5cec9d8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:04,278 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:22:04,289 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 20:22:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
2017-10-31 20:22:05,256 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=6b1fc7de-7d0a-3e63-a13a-3568a639d5a6
2017-10-31 20:22:05,272 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:22:05,317 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$73e58c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:05,405 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$7e143855] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:05,453 WARN  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][refresh] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
2017-10-31 20:22:05,454 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 20:22:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 20:22:05,456 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 20:22:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 20:22:05,457 ERROR [org.springframework.beans.factory.support.DefaultListableBeanFactory][destroyBean] Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2807bdeb: startup date [Tue Oct 31 20:22:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1700915
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
2017-10-31 20:22:05,466 INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer][logAutoConfigurationReport] 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017-10-31 20:22:05,470 ERROR [org.springframework.boot.SpringApplication][reportFailure] Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'spectatorRestTemplateInterceptorPostProcessor' defined in class path resource [org/springframework/cloud/netflix/metrics/MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:235)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 more
Caused by: java.lang.NoClassDefFoundError: org/aspectj/weaver/reflect/ReflectionWorld$ReflectionWorldException
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getPointcut(ReflectiveAspectJAdvisorFactory.java:220)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisor(ReflectiveAspectJAdvisorFactory.java:203)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:136)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:90)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 more
Caused by: java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 45 more
2017-10-31 20:22:48,224 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c267ef4: startup date [Tue Oct 31 20:22:48 CST 2017]; root of context hierarchy
2017-10-31 20:22:48,390 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:22:48,447 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:22:48,500 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1e743ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:48,884 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:22:48,897 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6492fab5: startup date [Tue Oct 31 20:22:48 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c267ef4
2017-10-31 20:22:49,855 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=6b1fc7de-7d0a-3e63-a13a-3568a639d5a6
2017-10-31 20:22:49,871 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:22:49,906 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$7c38fedc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:49,959 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$f30ede71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,029 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$b83286e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,187 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,194 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e7f9e6ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,216 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1e743ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,248 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$9db0eccd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:22:50,991 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize] Tomcat initialized with port(s): 5076 (http)
2017-10-31 20:22:51,104 INFO  [org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext] Root WebApplicationContext: initialization completed in 2207 ms
2017-10-31 20:22:51,705 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'metricsFilter' to: [/*]
2017-10-31 20:22:51,705 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'characterEncodingFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'traceFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'requestContextFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-10-31 20:22:51,706 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-10-31 20:22:51,707 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'dispatcherServlet' to [/]
2017-10-31 20:22:52,716 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6492fab5: startup date [Tue Oct 31 20:22:48 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c267ef4
2017-10-31 20:22:52,889 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.IndexController.index()
2017-10-31 20:22:52,889 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/getallopenposition]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.OrderController.getAllOpenPosition()
2017-10-31 20:22:52,891 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-10-31 20:22:52,891 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-10-31 20:22:53,000 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:22:53,000 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:22:53,076 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:22:54,826 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,827 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-10-31 20:22:54,827 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,828 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,828 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-10-31 20:22:54,829 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-10-31 20:22:54,829 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,830 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,830 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:22:54,830 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-10-31 20:22:54,831 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-10-31 20:22:54,831 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-10-31 20:22:54,833 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,835 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-10-31 20:22:54,835 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:22:54,835 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,836 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,837 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-10-31 20:22:54,837 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-10-31 20:22:54,838 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-10-31 20:22:54,838 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,838 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:54,839 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:22:55,422 WARN  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][refresh] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sleuthHystrixConcurrencyStrategy' defined in class path resource [org/springframework/cloud/sleuth/instrument/hystrix/SleuthHystrixAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy]: Factory method 'sleuthHystrixConcurrencyStrategy' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
2017-10-31 20:22:56,343 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4294a74e: startup date [Tue Oct 31 20:22:56 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6492fab5
2017-10-31 20:22:56,381 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:22:56,390 WARN  [org.springframework.context.annotation.AnnotationConfigApplicationContext][refresh] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaRibbonClientConfiguration': Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
2017-10-31 20:22:56,392 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][destroy] Unregistering JMX-exposed beans on shutdown
2017-10-31 20:22:56,393 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy] Unregistering JMX-exposed beans on shutdown
2017-10-31 20:22:56,404 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create] Setting initial instance status as: STARTING
2017-10-31 20:22:56,444 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Initializing Eureka in region us-east-1
2017-10-31 20:22:56,683 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON encoding codec LegacyJacksonJson
2017-10-31 20:22:56,683 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON decoding codec LegacyJacksonJson
2017-10-31 20:22:56,773 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML encoding codec XStreamXml
2017-10-31 20:22:56,774 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML decoding codec XStreamXml
2017-10-31 20:22:56,974 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:22:57,031 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Disable delta property : false
2017-10-31 20:22:57,031 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Single vip registry refresh property : null
2017-10-31 20:22:57,031 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Force full registry fetch : false
2017-10-31 20:22:57,032 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application is null : false
2017-10-31 20:22:57,032 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Registered Applications size is zero : true
2017-10-31 20:22:57,032 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application version is -1: true
2017-10-31 20:22:57,032 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] Getting all instance registry info from the eureka server
2017-10-31 20:22:57,179 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] The response status is 200
2017-10-31 20:22:57,181 INFO  [com.netflix.discovery.DiscoveryClient][initScheduledTasks] Starting heartbeat executor: renew interval is: 30
2017-10-31 20:22:57,183 INFO  [com.netflix.discovery.InstanceInfoReplicator][<init>] InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-10-31 20:22:57,185 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Discovery Client initialized at timestamp 1509452577185 with initial instances count: 2
2017-10-31 20:22:57,285 INFO  [com.netflix.discovery.DiscoveryClient][shutdown] Shutting down DiscoveryClient ...
2017-10-31 20:22:57,285 INFO  [com.netflix.discovery.DiscoveryClient][unregister] Unregistering ...
2017-10-31 20:22:57,290 INFO  [com.netflix.discovery.DiscoveryClient][unregister] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076 - deregister  status: 404
2017-10-31 20:22:57,293 INFO  [com.netflix.discovery.DiscoveryClient][shutdown] Completed shut down of DiscoveryClient
2017-10-31 20:22:57,313 INFO  [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer][logAutoConfigurationReport] 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017-10-31 20:22:57,318 ERROR [org.springframework.boot.SpringApplication][reportFailure] Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sleuthHystrixConcurrencyStrategy' defined in class path resource [org/springframework/cloud/sleuth/instrument/hystrix/SleuthHystrixAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy]: Factory method 'sleuthHystrixConcurrencyStrategy' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.broctagon.trad.rm.http.SpringBootMain.main(SpringBootMain.java:18)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy]: Factory method 'sleuthHystrixConcurrencyStrategy' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 18 more
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Unknown Source)
	at com.netflix.hystrix.strategy.HystrixArchaiusHelper$LazyHolder.<clinit>(HystrixArchaiusHelper.java:41)
	at com.netflix.hystrix.strategy.HystrixArchaiusHelper.isArchaiusV1Available(HystrixArchaiusHelper.java:54)
	at com.netflix.hystrix.strategy.HystrixArchaiusHelper.createArchaiusDynamicProperties(HystrixArchaiusHelper.java:72)
	at com.netflix.hystrix.strategy.HystrixPlugins.resolveDynamicProperties(HystrixPlugins.java:384)
	at com.netflix.hystrix.strategy.HystrixPlugins.<init>(HystrixPlugins.java:72)
	at com.netflix.hystrix.strategy.HystrixPlugins.create(HystrixPlugins.java:88)
	at com.netflix.hystrix.strategy.HystrixPlugins.create(HystrixPlugins.java:99)
	at com.netflix.hystrix.strategy.HystrixPlugins$LazyHolder.<clinit>(HystrixPlugins.java:57)
	at com.netflix.hystrix.strategy.HystrixPlugins.getInstance(HystrixPlugins.java:103)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy.<init>(SleuthHystrixConcurrencyStrategy.java:64)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration.sleuthHystrixConcurrencyStrategy(SleuthHystrixAutoConfiguration.java:33)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration$$EnhancerBySpringCGLIB$$fd575d.CGLIB$sleuthHystrixConcurrencyStrategy$0(<generated>)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration$$EnhancerBySpringCGLIB$$fd575d$$FastClassBySpringCGLIB$$20e28bde.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixAutoConfiguration$$EnhancerBySpringCGLIB$$fd575d.sleuthHystrixConcurrencyStrategy(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 19 more
Caused by: java.lang.ClassNotFoundException: org.apache.commons.configuration.Configuration
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 42 more
2017-10-31 20:23:38,278 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3daa422a: startup date [Tue Oct 31 20:23:38 CST 2017]; root of context hierarchy
2017-10-31 20:23:38,479 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:23:38,516 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:23:38,564 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5d0b4f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:38,952 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:23:38,964 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2072acb2: startup date [Tue Oct 31 20:23:38 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3daa422a
2017-10-31 20:23:39,851 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=daa962b1-325a-3a05-a2e3-423ed0ed539c
2017-10-31 20:23:39,868 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:23:39,902 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$75d0a79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:39,953 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$7e32ea0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,022 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$4356927d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,170 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,174 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$731df28c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,194 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5d0b4f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,215 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$28d4f86a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:23:40,785 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize] Tomcat initialized with port(s): 5076 (http)
2017-10-31 20:23:40,901 INFO  [org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext] Root WebApplicationContext: initialization completed in 1937 ms
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'metricsFilter' to: [/*]
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'characterEncodingFilter' to: [/*]
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'traceFilter' to: [/*]
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-10-31 20:23:41,519 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'requestContextFilter' to: [/*]
2017-10-31 20:23:41,520 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-10-31 20:23:41,520 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-10-31 20:23:41,520 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'dispatcherServlet' to [/]
2017-10-31 20:23:42,129 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:23:42,129 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:23:42,134 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:23:42,134 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:23:42,623 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2072acb2: startup date [Tue Oct 31 20:23:38 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3daa422a
2017-10-31 20:23:42,799 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.IndexController.index()
2017-10-31 20:23:42,800 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/getallopenposition]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.OrderController.getAllOpenPosition()
2017-10-31 20:23:42,802 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-10-31 20:23:42,803 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-10-31 20:23:42,924 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:23:42,924 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:23:43,008 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:23:44,761 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-10-31 20:23:44,762 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-10-31 20:23:44,762 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-10-31 20:23:44,763 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,763 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-10-31 20:23:44,764 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,764 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,765 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,765 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,766 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,767 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-10-31 20:23:44,768 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-10-31 20:23:44,769 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:23:44,769 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,769 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,770 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-10-31 20:23:44,770 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,771 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:23:44,771 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-10-31 20:23:44,771 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-10-31 20:23:44,772 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,772 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:44,773 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-10-31 20:23:44,773 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:23:45,449 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize] Initializing ExecutorService 
2017-10-31 20:23:45,522 WARN  [org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration][logWarning] spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017-10-31 20:23:45,567 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:23:45,574 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-10-31 20:23:45,575 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-10-31 20:23:45,576 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-10-31 20:23:45,576 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-10-31 20:23:45,576 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-10-31 20:23:45,577 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-10-31 20:23:45,579 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-10-31 20:23:45,589 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-10-31 20:23:45,595 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-10-31 20:23:45,606 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2072acb2,type=ConfigurationPropertiesRebinder]
2017-10-31 20:23:45,620 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-10-31 20:23:45,626 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-10-31 20:23:45,628 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:23:45,729 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 0
2017-10-31 20:23:45,736 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create] Setting initial instance status as: STARTING
2017-10-31 20:23:45,778 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Initializing Eureka in region us-east-1
2017-10-31 20:23:46,008 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON encoding codec LegacyJacksonJson
2017-10-31 20:23:46,008 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON decoding codec LegacyJacksonJson
2017-10-31 20:23:46,096 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML encoding codec XStreamXml
2017-10-31 20:23:46,096 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML decoding codec XStreamXml
2017-10-31 20:23:46,297 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:23:46,355 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Disable delta property : false
2017-10-31 20:23:46,356 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Single vip registry refresh property : null
2017-10-31 20:23:46,356 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Force full registry fetch : false
2017-10-31 20:23:46,356 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application is null : false
2017-10-31 20:23:46,356 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Registered Applications size is zero : true
2017-10-31 20:23:46,357 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application version is -1: true
2017-10-31 20:23:46,357 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] Getting all instance registry info from the eureka server
2017-10-31 20:23:46,516 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] The response status is 200
2017-10-31 20:23:46,518 INFO  [com.netflix.discovery.DiscoveryClient][initScheduledTasks] Starting heartbeat executor: renew interval is: 30
2017-10-31 20:23:46,520 INFO  [com.netflix.discovery.InstanceInfoReplicator][<init>] InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-10-31 20:23:46,523 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Discovery Client initialized at timestamp 1509452626523 with initial instances count: 2
2017-10-31 20:23:46,612 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register] Registering application trad-rm-http with eureka with status UP
2017-10-31 20:23:46,613 INFO  [com.netflix.discovery.DiscoveryClient][notify] Saw local status change event StatusChangeEvent [timestamp=1509452626613, current=UP, previous=STARTING]
2017-10-31 20:23:46,614 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076: registering service...
2017-10-31 20:23:46,618 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-10-31 20:23:46,625 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-10-31 20:23:46,631 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-10-31 20:23:46,638 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-10-31 20:23:46,640 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-10-31 20:23:46,642 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-10-31 20:23:46,644 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-10-31 20:23:46,648 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-10-31 20:23:46,653 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-10-31 20:23:46,660 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076 - registration status: 204
2017-10-31 20:23:46,661 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-10-31 20:23:46,664 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-10-31 20:23:46,666 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-10-31 20:23:46,668 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-10-31 20:23:46,670 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-10-31 20:23:46,671 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 2147483647
2017-10-31 20:23:46,744 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start] Tomcat started on port(s): 5076 (http)
2017-10-31 20:23:46,745 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent] Updating port to 5076
2017-10-31 20:23:46,754 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStarted] Started SpringBootMain in 8.827 seconds (JVM running for 9.245)
2017-10-31 20:24:48,436 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ddd4d22: startup date [Tue Oct 31 20:24:48 CST 2017]; root of context hierarchy
2017-10-31 20:24:48,626 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:24:48,660 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$252343bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:48,670 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:24:49,025 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:24:49,132 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@733522c6: startup date [Tue Oct 31 20:24:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ddd4d22
2017-10-31 20:24:50,139 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=daa962b1-325a-3a05-a2e3-423ed0ed539c
2017-10-31 20:24:50,158 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:24:50,199 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$cf74feed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,266 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$464ade82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,352 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$b6e86f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,523 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,527 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3b35e700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,550 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$252343bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:50,572 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$f0ececde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:24:51,087 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize] Tomcat initialized with port(s): 5076 (http)
2017-10-31 20:24:51,174 INFO  [org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext] Root WebApplicationContext: initialization completed in 2042 ms
2017-10-31 20:24:51,729 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'metricsFilter' to: [/*]
2017-10-31 20:24:51,729 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'characterEncodingFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'traceFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'requestContextFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-10-31 20:24:51,730 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-10-31 20:24:51,731 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'dispatcherServlet' to [/]
2017-10-31 20:24:52,366 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:24:52,366 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:24:52,372 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:24:52,373 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:24:52,972 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@733522c6: startup date [Tue Oct 31 20:24:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ddd4d22
2017-10-31 20:24:53,212 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.IndexController.index()
2017-10-31 20:24:53,214 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/getallopenposition]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.OrderController.getAllOpenPosition()
2017-10-31 20:24:53,218 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-10-31 20:24:53,218 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-10-31 20:24:53,352 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:24:53,352 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:24:53,442 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:24:55,411 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:24:55,411 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-10-31 20:24:55,413 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-10-31 20:24:55,413 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:24:55,414 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,414 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,415 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-10-31 20:24:55,416 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-10-31 20:24:55,416 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,417 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-10-31 20:24:55,418 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,419 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,420 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-10-31 20:24:55,421 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,421 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,421 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-10-31 20:24:55,422 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-10-31 20:24:55,422 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,423 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,423 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,423 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,424 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:24:55,424 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-10-31 20:24:55,425 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-10-31 20:24:56,130 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize] Initializing ExecutorService 
2017-10-31 20:24:56,207 WARN  [org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration][logWarning] spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017-10-31 20:24:56,256 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:24:56,263 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-10-31 20:24:56,264 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-10-31 20:24:56,265 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-10-31 20:24:56,265 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-10-31 20:24:56,266 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-10-31 20:24:56,267 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-10-31 20:24:56,269 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-10-31 20:24:56,282 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-10-31 20:24:56,289 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-10-31 20:24:56,299 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=733522c6,type=ConfigurationPropertiesRebinder]
2017-10-31 20:24:56,304 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-10-31 20:24:56,311 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-10-31 20:24:56,314 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:24:56,428 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 0
2017-10-31 20:24:56,435 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create] Setting initial instance status as: STARTING
2017-10-31 20:24:56,480 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Initializing Eureka in region us-east-1
2017-10-31 20:24:56,719 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON encoding codec LegacyJacksonJson
2017-10-31 20:24:56,719 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON decoding codec LegacyJacksonJson
2017-10-31 20:24:56,822 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML encoding codec XStreamXml
2017-10-31 20:24:56,822 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML decoding codec XStreamXml
2017-10-31 20:24:57,274 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:24:57,346 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Disable delta property : false
2017-10-31 20:24:57,347 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Single vip registry refresh property : null
2017-10-31 20:24:57,347 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Force full registry fetch : false
2017-10-31 20:24:57,347 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application is null : false
2017-10-31 20:24:57,347 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Registered Applications size is zero : true
2017-10-31 20:24:57,347 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application version is -1: true
2017-10-31 20:24:57,348 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] Getting all instance registry info from the eureka server
2017-10-31 20:24:57,530 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] The response status is 200
2017-10-31 20:24:57,533 INFO  [com.netflix.discovery.DiscoveryClient][initScheduledTasks] Starting heartbeat executor: renew interval is: 30
2017-10-31 20:24:57,536 INFO  [com.netflix.discovery.InstanceInfoReplicator][<init>] InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-10-31 20:24:57,538 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Discovery Client initialized at timestamp 1509452697538 with initial instances count: 3
2017-10-31 20:24:57,631 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register] Registering application trad-rm-http with eureka with status UP
2017-10-31 20:24:57,632 INFO  [com.netflix.discovery.DiscoveryClient][notify] Saw local status change event StatusChangeEvent [timestamp=1509452697632, current=UP, previous=STARTING]
2017-10-31 20:24:57,633 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076: registering service...
2017-10-31 20:24:57,637 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-10-31 20:24:57,644 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-10-31 20:24:57,671 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076 - registration status: 204
2017-10-31 20:24:57,671 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-10-31 20:24:57,674 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-10-31 20:24:57,676 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-10-31 20:24:57,677 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-10-31 20:24:57,680 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-10-31 20:24:57,682 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-10-31 20:24:57,685 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-10-31 20:24:57,691 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-10-31 20:24:57,693 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-10-31 20:24:57,695 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-10-31 20:24:57,697 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-10-31 20:24:57,700 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-10-31 20:24:57,701 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 2147483647
2017-10-31 20:24:57,770 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start] Tomcat started on port(s): 5076 (http)
2017-10-31 20:24:57,770 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent] Updating port to 5076
2017-10-31 20:24:57,775 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStarted] Started SpringBootMain in 9.678 seconds (JVM running for 12.7)
2017-10-31 20:29:57,353 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:32:26,390 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization started
2017-10-31 20:32:26,492 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization completed in 101 ms
2017-10-31 20:32:27,309 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b4a7596: startup date [Tue Oct 31 20:32:27 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@733522c6
2017-10-31 20:32:27,376 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:32:27,584 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:32:27,602 INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer][<init>] Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2017-10-31 20:32:27,630 INFO  [com.netflix.loadbalancer.BaseLoadBalancer][initWithConfig] Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-10-31 20:32:27,634 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][enableAndInitLearnNewServersFeature] Using serverListUpdater PollingServerListUpdater
2017-10-31 20:32:27,638 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][restOfInit] DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2bdf4ea9
2017-10-31 20:34:57,357 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:37:19,339 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a407d22: startup date [Tue Oct 31 20:37:19 CST 2017]; root of context hierarchy
2017-10-31 20:37:19,565 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:37:19,578 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:37:19,613 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2419aeba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:20,063 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:37:20,077 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdb08b5: startup date [Tue Oct 31 20:37:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a407d22
2017-10-31 20:37:21,020 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=daa962b1-325a-3a05-a2e3-423ed0ed539c
2017-10-31 20:37:21,039 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:37:21,079 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$ce6b69eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,137 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$45414980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,214 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$a64f1ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,380 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,384 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3a2c51fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,406 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2419aeba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,428 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$efe357dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:37:21,929 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize] Tomcat initialized with port(s): 5076 (http)
2017-10-31 20:37:22,019 INFO  [org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext] Root WebApplicationContext: initialization completed in 1942 ms
2017-10-31 20:37:22,664 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'metricsFilter' to: [/*]
2017-10-31 20:37:22,665 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'characterEncodingFilter' to: [/*]
2017-10-31 20:37:22,665 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'traceFilter' to: [/*]
2017-10-31 20:37:22,665 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-10-31 20:37:22,665 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-10-31 20:37:22,665 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'requestContextFilter' to: [/*]
2017-10-31 20:37:22,666 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-10-31 20:37:22,666 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-10-31 20:37:22,666 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'dispatcherServlet' to [/]
2017-10-31 20:37:23,193 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:37:23,194 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:37:23,199 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:37:23,200 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:37:23,852 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdb08b5: startup date [Tue Oct 31 20:37:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a407d22
2017-10-31 20:37:24,038 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.IndexController.index()
2017-10-31 20:37:24,039 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/getallopenposition]}" onto public java.lang.String com.broctagon.trad.rm.http.controller.OrderController.getAllOpenPosition()
2017-10-31 20:37:24,042 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-10-31 20:37:24,043 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-10-31 20:37:24,161 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:37:24,161 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:37:24,248 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:37:26,063 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,064 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-10-31 20:37:26,064 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-10-31 20:37:26,065 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:37:26,065 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-10-31 20:37:26,065 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,066 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,067 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,067 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-10-31 20:37:26,068 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-10-31 20:37:26,069 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:37:26,069 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,069 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-10-31 20:37:26,071 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,072 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-10-31 20:37:26,072 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,072 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,073 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-10-31 20:37:26,074 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,074 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,075 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-10-31 20:37:26,076 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-10-31 20:37:26,076 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,076 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:37:26,760 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize] Initializing ExecutorService 
2017-10-31 20:37:26,840 WARN  [org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration][logWarning] spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017-10-31 20:37:26,892 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:37:26,902 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-10-31 20:37:26,903 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-10-31 20:37:26,904 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-10-31 20:37:26,904 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-10-31 20:37:26,905 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-10-31 20:37:26,906 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-10-31 20:37:26,911 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-10-31 20:37:26,922 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-10-31 20:37:26,929 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-10-31 20:37:26,948 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1cdb08b5,type=ConfigurationPropertiesRebinder]
2017-10-31 20:37:26,952 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-10-31 20:37:26,958 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-10-31 20:37:26,961 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:37:27,079 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 0
2017-10-31 20:37:27,086 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create] Setting initial instance status as: STARTING
2017-10-31 20:37:27,135 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Initializing Eureka in region us-east-1
2017-10-31 20:37:27,382 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON encoding codec LegacyJacksonJson
2017-10-31 20:37:27,383 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON decoding codec LegacyJacksonJson
2017-10-31 20:37:27,484 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML encoding codec XStreamXml
2017-10-31 20:37:27,484 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML decoding codec XStreamXml
2017-10-31 20:37:27,966 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:37:28,046 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Disable delta property : false
2017-10-31 20:37:28,046 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Single vip registry refresh property : null
2017-10-31 20:37:28,047 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Force full registry fetch : false
2017-10-31 20:37:28,047 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application is null : false
2017-10-31 20:37:28,047 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Registered Applications size is zero : true
2017-10-31 20:37:28,047 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application version is -1: true
2017-10-31 20:37:28,047 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] Getting all instance registry info from the eureka server
2017-10-31 20:37:28,215 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] The response status is 200
2017-10-31 20:37:28,217 INFO  [com.netflix.discovery.DiscoveryClient][initScheduledTasks] Starting heartbeat executor: renew interval is: 30
2017-10-31 20:37:28,219 INFO  [com.netflix.discovery.InstanceInfoReplicator][<init>] InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-10-31 20:37:28,222 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Discovery Client initialized at timestamp 1509453448221 with initial instances count: 3
2017-10-31 20:37:28,315 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register] Registering application trad-rm-http with eureka with status UP
2017-10-31 20:37:28,315 INFO  [com.netflix.discovery.DiscoveryClient][notify] Saw local status change event StatusChangeEvent [timestamp=1509453448315, current=UP, previous=STARTING]
2017-10-31 20:37:28,317 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076: registering service...
2017-10-31 20:37:28,322 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-10-31 20:37:28,331 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-10-31 20:37:28,344 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-10-31 20:37:28,348 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-10-31 20:37:28,356 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-10-31 20:37:28,360 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-10-31 20:37:28,364 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-10-31 20:37:28,365 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-RM-HTTP/water:trad-rm-http:5076 - registration status: 204
2017-10-31 20:37:28,367 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-10-31 20:37:28,369 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-10-31 20:37:28,375 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-10-31 20:37:28,377 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-10-31 20:37:28,379 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-10-31 20:37:28,381 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-10-31 20:37:28,385 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-10-31 20:37:28,387 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 2147483647
2017-10-31 20:37:28,453 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start] Tomcat started on port(s): 5076 (http)
2017-10-31 20:37:28,454 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent] Updating port to 5076
2017-10-31 20:37:28,459 INFO  [com.broctagon.trad.rm.http.SpringBootMain][logStarted] Started SpringBootMain in 9.463 seconds (JVM running for 12.685)
2017-10-31 20:38:15,890 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization started
2017-10-31 20:38:15,946 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2017-10-31 20:38:16,565 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59456c18: startup date [Tue Oct 31 20:38:16 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdb08b5
2017-10-31 20:38:16,632 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:38:16,815 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:38:16,829 INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer][<init>] Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2017-10-31 20:38:16,857 INFO  [com.netflix.loadbalancer.BaseLoadBalancer][initWithConfig] Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-10-31 20:38:16,861 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][enableAndInitLearnNewServersFeature] Using serverListUpdater PollingServerListUpdater
2017-10-31 20:38:16,865 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][restOfInit] DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@262efe18
2017-10-31 20:42:28,052 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:43:31,247 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5119fb47: startup date [Tue Oct 31 20:43:31 CST 2017]; root of context hierarchy
2017-10-31 20:43:31,462 INFO  [org.hibernate.validator.internal.util.Version][<clinit>] HV000001: Hibernate Validator 5.3.5.Final
2017-10-31 20:43:31,516 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:43:31,558 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e403c324] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:31,912 INFO  [com.broctagon.trad.mgsg.SpringBootMain][logStartupProfileInfo] No active profile set, falling back to default profiles: default
2017-10-31 20:43:31,930 INFO  [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ebb6851: startup date [Tue Oct 31 20:43:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5119fb47
2017-10-31 20:43:33,039 INFO  [org.springframework.cloud.context.scope.GenericScope][setSerializationId] BeanFactory id=d64e30ad-9dd4-311b-8e26-6b92fd5bf134
2017-10-31 20:43:33,055 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:43:33,074 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'com.broctagon.trad.mgsg.feign.CmFeignClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,122 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$52b5dea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,201 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$ca4f0659] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,421 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,432 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fa166668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,466 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e403c324] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,499 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$77b98ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:33,525 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$afcd6c46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-10-31 20:43:34,360 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize] Tomcat initialized with port(s): 5050 (http)
2017-10-31 20:43:34,496 INFO  [org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext] Root WebApplicationContext: initialization completed in 2566 ms
2017-10-31 20:43:35,216 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'metricsFilter' to: [/*]
2017-10-31 20:43:35,216 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'characterEncodingFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'traceFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'requestContextFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.FilterRegistrationBean][configure] Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-10-31 20:43:35,217 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017-10-31 20:43:35,218 INFO  [org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup] Mapping servlet: 'dispatcherServlet' to [/]
2017-10-31 20:43:35,575 INFO  [org.springframework.ui.freemarker.SpringTemplateLoader][<init>] SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ebb6851: startup date [Tue Oct 31 20:43:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5119fb47] and template loader path [classpath:/templates/]
2017-10-31 20:43:35,576 INFO  [org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][postProcessTemplateLoaders] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017-10-31 20:43:35,945 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:43:35,946 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:43:35,951 INFO  [com.netflix.config.DynamicPropertyFactory][getInstance] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@23ee2ccf
2017-10-31 20:43:36,643 WARN  [com.netflix.config.sources.URLConfigurationSource][<init>] No URLs will be polled as dynamic configuration sources.
2017-10-31 20:43:36,643 INFO  [com.netflix.config.sources.URLConfigurationSource][<init>] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-10-31 20:43:37,220 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ebb6851: startup date [Tue Oct 31 20:43:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5119fb47
2017-10-31 20:43:37,387 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/]}" onto public java.lang.String com.broctagon.trad.mgsg.controller.IndexController.index()
2017-10-31 20:43:37,388 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/cm/{url}]}" onto public java.lang.String com.broctagon.trad.mgsg.controller.UserInfoController.getTraderList(java.lang.String)
2017-10-31 20:43:37,388 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/rm/{url}]}" onto public java.lang.String com.broctagon.trad.mgsg.controller.UserInfoController.getAllOpenPosition(java.lang.String)
2017-10-31 20:43:37,388 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017-10-31 20:43:37,389 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017-10-31 20:43:37,391 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-10-31 20:43:37,392 INFO  [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-10-31 20:43:37,527 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:43:37,527 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:43:37,607 INFO  [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-10-31 20:43:38,888 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-10-31 20:43:38,888 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,888 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:43:38,889 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-10-31 20:43:38,889 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,890 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,890 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-10-31 20:43:38,891 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,891 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,892 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,893 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,893 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-10-31 20:43:38,894 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,894 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-10-31 20:43:38,895 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,895 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-10-31 20:43:38,896 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-10-31 20:43:38,896 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-10-31 20:43:38,897 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-10-31 20:43:38,897 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-10-31 20:43:38,897 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,898 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:38,899 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-10-31 20:43:38,900 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-10-31 20:43:38,900 INFO  [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-10-31 20:43:40,201 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize] Initializing ExecutorService 
2017-10-31 20:43:40,292 WARN  [org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration][logWarning] spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017-10-31 20:43:40,341 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:43:40,348 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-10-31 20:43:40,350 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-10-31 20:43:40,351 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-10-31 20:43:40,351 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-10-31 20:43:40,352 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect] Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-10-31 20:43:40,355 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-10-31 20:43:40,365 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-10-31 20:43:40,371 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-10-31 20:43:40,379 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ebb6851,type=ConfigurationPropertiesRebinder]
2017-10-31 20:43:40,384 INFO  [org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-10-31 20:43:40,387 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][afterSingletonsInstantiated] Registering beans for JMX exposure on startup
2017-10-31 20:43:40,500 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 0
2017-10-31 20:43:40,509 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create] Setting initial instance status as: STARTING
2017-10-31 20:43:40,551 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Initializing Eureka in region us-east-1
2017-10-31 20:43:40,784 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON encoding codec LegacyJacksonJson
2017-10-31 20:43:40,784 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using JSON decoding codec LegacyJacksonJson
2017-10-31 20:43:40,871 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML encoding codec XStreamXml
2017-10-31 20:43:40,871 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>] Using XML decoding codec XStreamXml
2017-10-31 20:43:41,065 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:43:41,120 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Disable delta property : false
2017-10-31 20:43:41,120 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Single vip registry refresh property : null
2017-10-31 20:43:41,120 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Force full registry fetch : false
2017-10-31 20:43:41,120 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application is null : false
2017-10-31 20:43:41,120 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Registered Applications size is zero : true
2017-10-31 20:43:41,121 INFO  [com.netflix.discovery.DiscoveryClient][fetchRegistry] Application version is -1: true
2017-10-31 20:43:41,121 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] Getting all instance registry info from the eureka server
2017-10-31 20:43:41,262 INFO  [com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry] The response status is 200
2017-10-31 20:43:41,263 INFO  [com.netflix.discovery.DiscoveryClient][initScheduledTasks] Starting heartbeat executor: renew interval is: 30
2017-10-31 20:43:41,265 INFO  [com.netflix.discovery.InstanceInfoReplicator][<init>] InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-10-31 20:43:41,267 INFO  [com.netflix.discovery.DiscoveryClient][<init>] Discovery Client initialized at timestamp 1509453821266 with initial instances count: 2
2017-10-31 20:43:41,431 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register] Registering application trad-mgsg-http with eureka with status UP
2017-10-31 20:43:41,431 INFO  [com.netflix.discovery.DiscoveryClient][notify] Saw local status change event StatusChangeEvent [timestamp=1509453821431, current=UP, previous=STARTING]
2017-10-31 20:43:41,435 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-MGSG-HTTP/water:trad-mgsg-http:5050: registering service...
2017-10-31 20:43:41,439 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-10-31 20:43:41,449 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-10-31 20:43:41,464 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-10-31 20:43:41,464 INFO  [com.netflix.discovery.DiscoveryClient][register] DiscoveryClient_TRAD-MGSG-HTTP/water:trad-mgsg-http:5050 - registration status: 204
2017-10-31 20:43:41,467 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-10-31 20:43:41,469 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-10-31 20:43:41,471 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-10-31 20:43:41,473 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-10-31 20:43:41,475 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-10-31 20:43:41,477 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-10-31 20:43:41,481 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-10-31 20:43:41,483 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-10-31 20:43:41,485 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-10-31 20:43:41,487 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-10-31 20:43:41,489 INFO  [org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter][registerBeanInstance] Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-10-31 20:43:41,490 INFO  [org.springframework.context.support.DefaultLifecycleProcessor][start] Starting beans in phase 2147483647
2017-10-31 20:43:41,493 INFO  [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration][start] Starting poller
2017-10-31 20:43:41,545 INFO  [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start] Tomcat started on port(s): 5050 (http)
2017-10-31 20:43:41,546 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent] Updating port to 5050
2017-10-31 20:43:41,554 INFO  [com.broctagon.trad.mgsg.SpringBootMain][logStarted] Started SpringBootMain in 10.683 seconds (JVM running for 11.111)
2017-10-31 20:43:41,610 INFO  [org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardConfiguration$ProxyStreamServlet][doGet] 

Proxy opening connection to: http://localhost:5050/hystrix.stream


2017-10-31 20:43:41,623 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization started
2017-10-31 20:43:41,664 INFO  [org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardConfiguration$ProxyStreamServlet][doGet] 

Proxy opening connection to: http://localhost:5050/hystrix.stream


2017-10-31 20:43:41,674 INFO  [org.springframework.web.servlet.DispatcherServlet][initServletBean] FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2017-10-31 20:43:47,527 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getTraderList] url.gettraderlist
2017-10-31 20:43:47,549 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7bd73969: startup date [Tue Oct 31 20:43:47 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ebb6851
2017-10-31 20:43:47,595 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:43:47,781 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-cm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:43:47,813 INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer][<init>] Shutdown hook installed for: NFLoadBalancer-PingTimer-trad-cm
2017-10-31 20:43:47,842 INFO  [com.netflix.loadbalancer.BaseLoadBalancer][initWithConfig] Client: trad-cm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trad-cm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-10-31 20:43:47,845 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][enableAndInitLearnNewServersFeature] Using serverListUpdater PollingServerListUpdater
2017-10-31 20:43:47,867 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-cm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:43:47,868 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][restOfInit] DynamicServerListLoadBalancer for client trad-cm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trad-cm,current list of Servers=[10.10.10.64:5072],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.10.64:5072;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2cbfdfc0
2017-10-31 20:43:48,041 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getTraderList] str:traderlist:
2017-10-31 20:43:48,848 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-cm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:43:56,261 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getAllOpenPosition] getAllOpenPosition,url:getallopenposition
2017-10-31 20:43:56,268 INFO  [org.springframework.context.annotation.AnnotationConfigApplicationContext][prepareRefresh] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2510593a: startup date [Tue Oct 31 20:43:56 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ebb6851
2017-10-31 20:43:56,312 INFO  [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-10-31 20:43:56,359 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-rm-http.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:43:56,361 INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer][<init>] Shutdown hook installed for: NFLoadBalancer-PingTimer-trad-rm-http
2017-10-31 20:43:56,365 INFO  [com.netflix.loadbalancer.BaseLoadBalancer][initWithConfig] Client: trad-rm-http instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trad-rm-http,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-10-31 20:43:56,366 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][enableAndInitLearnNewServersFeature] Using serverListUpdater PollingServerListUpdater
2017-10-31 20:43:56,368 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-rm-http.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:43:56,370 INFO  [com.netflix.loadbalancer.DynamicServerListLoadBalancer][restOfInit] DynamicServerListLoadBalancer for client trad-rm-http initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trad-rm-http,current list of Servers=[10.10.10.64:5076],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.10.64:5076;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@17114eb6
2017-10-31 20:43:56,512 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getAllOpenPosition] str:getallopenposition
2017-10-31 20:43:57,368 INFO  [com.netflix.config.ChainedDynamicProperty][checkAndFlip] Flipping property: trad-rm-http.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-10-31 20:44:11,773 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getAllOpenPosition] getAllOpenPosition,url:getallopenposition
2017-10-31 20:44:11,870 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getAllOpenPosition] str:getallopenposition
2017-10-31 20:44:21,449 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getTraderList] url.gettraderlist
2017-10-31 20:44:21,556 INFO  [com.broctagon.trad.mgsg.controller.UserInfoController][getTraderList] str:traderlist:
2017-10-31 20:44:28,875 INFO  [org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardConfiguration$ProxyStreamServlet][doGet] 

Proxy opening connection to: http://localhost:5050/hystrix.stream


2017-10-31 20:44:28,907 INFO  [org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardConfiguration$ProxyStreamServlet][doGet] 

Proxy opening connection to: http://localhost:5050/hystrix.stream


2017-10-31 20:47:28,057 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:48:41,127 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:52:28,062 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:53:41,132 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:57:28,066 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 20:58:41,137 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:02:28,071 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:03:41,142 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:07:28,076 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:08:41,146 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:12:28,080 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:13:41,150 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:17:28,084 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:18:41,154 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:22:28,088 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:23:41,158 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:27:28,092 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:28:41,163 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:32:28,097 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:33:41,167 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:37:28,101 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:38:41,171 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:42:28,106 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:43:41,175 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:47:28,110 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:48:41,179 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:52:28,114 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:53:41,183 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:57:28,118 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 21:58:41,188 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:02:28,123 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:03:41,192 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:07:28,127 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:08:41,196 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:12:28,131 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints] Resolving eureka endpoints via configuration
2017-10-31 22:13:14,351 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute] Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more
2017-10-31 22:13:14,353 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2017-10-31 22:13:14,369 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute] Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2017-10-31 22:13:14,369 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2017-10-31 22:13:16,364 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute] Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2017-10-31 22:13:16,364 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2017-10-31 22:13:16,366 ERROR [com.netflix.discovery.DiscoveryClient][renew] DiscoveryClient_TRAD-MGSG-HTTP/water:trad-mgsg-http:5050 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2017-10-31 22:13:16,381 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute] Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2017-10-31 22:13:16,381 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2017-10-31 22:13:16,381 ERROR [com.netflix.discovery.DiscoveryClient][fetchRegistry] DiscoveryClient_TRAD-MGSG-HTTP/water:trad-mgsg-http:5050 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
